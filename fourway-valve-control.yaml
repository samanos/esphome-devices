esphome:
  name: fourway-valve-control
  platform: ESP32
  board: featheresp32

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

web_server:
  port: 80

spi:
  clk_pin: GPIO18
  mosi_pin: GPIO19

number:
  - platform: template
    id: fourway_valve_position
    name: fourway_valve_position
    initial_value: 0
    min_value: 0
    max_value: 100
    step: 1
    optimistic: true
    set_action:
      then:
        - script.execute: move_servo_motor

  - platform: template
    id: test_servo_control
    name: Test Servo Control
    min_value: -100
    initial_value: 0
    max_value: 100
    step: 1
    optimistic: true
    set_action:
      then:
        - servo.write:
            id: valve_servo
            level: !lambda 'return x / 100.0;'

script:
  - id: set_valve_position
    then:
      - number.set:
          id: fourway_valve_position
          value: !lambda |-
            float valve_position = (id(control_temp).state - id(bottom_temp).state) / (id(top_temp).state - id(bottom_temp).state);
            return round(max(0.0, min(100.0, valve_position * 100.0)));

  - id: move_servo_motor
    then:
      - servo.write:
          id: valve_servo
          level: !lambda |-
            return (id(fully_closed_at).state - (
              (id(fourway_valve_position).state / 100.0) * (id(fully_closed_at).state - id(fully_open_at).state)
            )) / -100.0;

sensor:
  - platform: homeassistant
    entity_id: input_number.fourway_valve_bottom_temp
    id: bottom_temp
    on_value:
      - script.execute: set_valve_position
      - script.execute: move_servo_motor
  - platform: homeassistant
    entity_id: input_number.fourway_valve_top_temp
    id: top_temp
    on_value:
      - script.execute: set_valve_position
      - script.execute: move_servo_motor
  - platform: homeassistant
    entity_id: input_number.fourway_valve_control_temp
    id: control_temp
    on_value:
      - script.execute: set_valve_position
      - script.execute: move_servo_motor
  - platform: homeassistant
    entity_id: input_number.fourway_valve_fully_open_at
    id: fully_open_at
    on_value:
      then:
        script.execute: move_servo_motor
  - platform: homeassistant
    entity_id: input_number.fourway_valve_fully_closed_at
    id: fully_closed_at
    on_value:
      then:
        script.execute: move_servo_motor
  - platform: wifi_signal
    name: fourway_valve_wifi_signal
    update_interval: 30s

servo:
  - id: valve_servo
    output: servo_pwm
    auto_detach_time: 2s
    transition_length: 5s
    min_level: 2.5%
    idle_level: 7.5%
    max_level: 12.5%

output:
  - platform: ledc
    pin: GPIO27
    id: servo_pwm
    frequency: 50Hz
    channel: 0 # https://github.com/esphome/issues/issues/3114
  - platform: ledc
    pin: GPIO4
    id: backlight_pwm
    channel: 2

# small motor (continuos)
# range 700us - 2300us
# pulse_width 1_000_000 / 50Hz = 20_000us
# min_level: 700 / 20_000.0 * 100 = 3.5
# max_level 2300 / 20_000.0 * 100 = 11.5

# TD-8120MG
# https://www.tinytronics.nl/product_files/002172_Data%20Sheet%20of%20TD-8120MG%20Digital%20Servo%20Motor.pdf
# mid motor
# range 500us - 2500us, neutral 1500us
# ---------------------------------------
# pulse_width 1_000_000 / 50Hz = 20_000us
# min_level 500 / 20_000.0 * 100 = 2.5
# idle_level 1500 / 20_000.0 * 100 = 7.5
# max_level 2500 / 20_000.0 * 100 = 12.5
# ----------------------------------------
# pulse_width 1_000_000 / 100Hz = 10_000us
# min_level 500 / 10_000.0 * 100 = 5.0
# idle_level 1500 / 10_000.0 * 100 = 15.0
# max_level 2500 / 10_000.0 * 100 = 25.0
# ----------------------------------------

# servo tester
# pulse_width 1_000_000 / 50Hz = 20_000us
# min_level 4.5% = 900us
# idle_level 7.5% = 1500us
# max_level 10.5% = 2100us

font:
  - id: l
    file: "fonts/BebasNeue-Regular.ttf"
    size: 80

display:
  - id: fourway_display
    platform: ili9xxx
    model: ST7789V
    #TTGO TDisplay 135x240
    dimensions:
      height: 240
      width: 135
      offset_height: 40
      offset_width: 52
    cs_pin: GPIO5
    dc_pin: GPIO16
    reset_pin: GPIO23
    rotation: 90Â°
    invert_colors: true
    lambda: |-
      it.printf(20, 20, id(l), "%.0f%%", id(fourway_valve_position).state);

light:
  - platform: monochromatic
    output: backlight_pwm
    name: "Display Backlight"
    id: back_light
    restore_mode: ALWAYS_ON

logger:

api:

ota:
  platform: esphome
